# Run this app with `python app.py` and
# visit http://127.0.0.1:8050/ in your web browser.

from dash import Dash, html, dcc
import plotly.express as px
import pandas as pd
from plotly.subplots import make_subplots
import plotly.graph_objects as go
app = Dash(__name__)

excel="Book2.xlsx"
#df - arkusz 2 dotyczacy stanu kont
df=pd.read_excel(excel,sheet_name='Book2')
#df1 - arkusz 3 dotyczacy planera rozdysponowania miesiecznych zarobkow
df1=pd.read_excel(excel,sheet_name='Book3')
#df2 - arkusz 4 dotyczacy miesiecznych wydatków
df2=pd.read_excel(excel,sheet_name='Book4')


sales1=df1['Money1']
dftree= df[df.Month == "08 August"]
#filtrowanie po pieniądzach
sales=dftree['Money']


#wykres pierwszy treemap dla stanu kont
fig = px.treemap(dftree,path=['Account'],values=sales,title="Stan Kont Bankowych Dla Ostatniego Miesiąca:")
#co jest wyswietlane
fig.data[0].textinfo = 'label+value'
#wielkosc tekstu
fig.update_layout(uniformtext_minsize=16, uniformtext_mode='hide')

#wykres 2, kołowy dla planowanego rozdysponowania pensji przed gdanskiem
#fig2 = px.pie(df1,values=sales1,names=df1["Goal"], title='Pensja, rozplanowanie', hole=.1)
#fig2.update_traces(textposition='inside', textinfo='percent+label')
#fig2.update_layout(
#    autosize=False,
#    width=750,
#    height=750,
#    margin=dict(
#        l=50,
#        r=50,
#        b=100,
#        t=100,
#        pad=4
#    ))

#podwojny wykres kołowy dla planowanych zarobków
fig5 = make_subplots(1, 2, specs=[[{'type':'domain'}, {'type':'domain'}]],
                    subplot_titles=['Wrzesien', '?'])
#fig5.add_trace(px.pie(df1,values=sales1,names=df1["Goal"], title='Pensja, rozplanowanie'), 1, 1)
fig5.add_trace(go.Pie(labels=df1["Goal"], values=sales1,
                     name="Miesiac Wrzesien 2022"), 1, 1)
fig5.add_trace(go.Pie(labels=df1["Goal"], values=sales1,
                     name="Miesiac Pazdziernik 2022"), 1, 2)
fig5.update_traces(textposition='inside', textinfo='percent+label+value')
fig5.update_layout(
    autosize=False,
    width=1400,
    height=700,
    )


sales2=df2['Money2']

#podwojny wykres kołowy dla wydatkow miesiecznych
fig6 = make_subplots(1, 2, specs=[[{'type':'domain'}, {'type':'domain'}]],
                    subplot_titles=['Wrzesien', '?'])
#fig5.add_trace(px.pie(df1,values=sales1,names=df1["Goal"], title='Pensja, rozplanowanie'), 1, 1)
fig6.add_trace(go.Pie(labels=df2["Category"], values=sales2,
                     name="Miesiac Wrzesien 2022"), 1, 1)
fig6.add_trace(go.Pie(labels=df2["Category"], values=sales2,
                     name="Miesiac Pazdziernik 2022"), 1, 2)
fig6.update_traces(textposition='inside', textinfo='percent+label+value')
fig6.update_layout(
    autosize=False,
    width=1400,
    height=700,
    )









#filtorwanie wynikow dla zebranych pieniedzy auto
cel_auto=df[df.Account == "Auto"]
cel_auto_mies= cel_auto.groupby('Month')['Money'].sum()
cel_auto_mies= pd.DataFrame(cel_auto_mies)
cel_auto_mies.columns = ['Money']
cel_auto_mies.sort_values(by=['Month'], inplace=True, ascending=True)
#usuwanie numerkow przed miesiacem
cel_auto_mies.index = [x.split()[1] for x in cel_auto_mies.index]
cel_auto_mies.index = cel_auto_mies.index.str.capitalize()

#wykres 3 auto/zwykly graf kolumnowy
fig1 = px.bar(cel_auto_mies, x=cel_auto_mies.index, y='Money', title="Auto")






#pliki strony
app.layout = html.Div(children=[
    html.H1(children='PODSUMOWANIE FINANSÓW'),

    html.Div(children='''
        Na podstawie danych własnych
    '''),

    dcc.Graph(
        id='example-graph',
        figure=fig
    ),
    dcc.Graph(
        id='example-graph1',
        figure=fig1
    )
,
    #dcc.Graph(
    #    id='example-graph2',
    #    figure=fig2
    #)
#,
    dcc.Graph(
        id='example-graph3',
        figure=fig5
    ),
    dcc.Graph(
        id='example-graph4',
        figure=fig6
    )

])

if __name__ == '__main__':
    app.run_server(debug=True)
